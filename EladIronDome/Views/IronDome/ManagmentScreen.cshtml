@model List<EladIronDome.Models.DefenceAmmunition>

@{
    ViewData["Title"] = "Management Screen";
    var errorMsg = TempData["ErrorMessage"];
    var SuccessMsg = TempData["SuccessMessage"];
}

<h1>Management Screen</h1>
<hr />

@if (errorMsg != null)
{
    <h3 class="text-warning ">
        @errorMsg
    </h3>
}
else if (SuccessMsg != null)
{
    <h3 class="text-success alert-success">
        @SuccessMsg
    </h3>
}

<div class="row">
    <div class="col-md-6">
        <form asp-action="UpdateManagmentScreen" method="post">
            @Html.AntiForgeryToken() <!-- Include Anti-Forgery Token -->
            @for (int i = 0; i < Model.Count; i++)
            {
                <input asp-for="@Model[i].Id" type="hidden" />
                <div class="d-flex gap-3 mt-2">
                    <p class="my-auto">@Model[i].Name</p>
                    <div class="form-group">
                        <input asp-for="@Model[i].Amount" class="form-control" />
                    </div>
                </div>
            }

            <div class="form-group mt-3">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        setTimeout(() => {
            const warningMessage = document.querySelector(".text-warning");
            const successMessage = document.querySelector(".text-success");

            if (warningMessage) {
                warningMessage.remove();
            }

            if (successMessage) {
                successMessage.remove();
            }
        }, 3000);
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");

    }

}
